// Code generated by protoc-gen-go. DO NOT EDIT.
// source: otddserver.proto

package otddserver

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SaveTestCaseReq struct {
	TestCase             string   `protobuf:"bytes,1,opt,name=testCase,proto3" json:"testCase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveTestCaseReq) Reset()         { *m = SaveTestCaseReq{} }
func (m *SaveTestCaseReq) String() string { return proto.CompactTextString(m) }
func (*SaveTestCaseReq) ProtoMessage()    {}
func (*SaveTestCaseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_700cdb249eee9820, []int{0}
}

func (m *SaveTestCaseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveTestCaseReq.Unmarshal(m, b)
}
func (m *SaveTestCaseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveTestCaseReq.Marshal(b, m, deterministic)
}
func (m *SaveTestCaseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveTestCaseReq.Merge(m, src)
}
func (m *SaveTestCaseReq) XXX_Size() int {
	return xxx_messageInfo_SaveTestCaseReq.Size(m)
}
func (m *SaveTestCaseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveTestCaseReq.DiscardUnknown(m)
}

var xxx_messageInfo_SaveTestCaseReq proto.InternalMessageInfo

func (m *SaveTestCaseReq) GetTestCase() string {
	if m != nil {
		return m.TestCase
	}
	return ""
}

type SaveTestCaseResp struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveTestCaseResp) Reset()         { *m = SaveTestCaseResp{} }
func (m *SaveTestCaseResp) String() string { return proto.CompactTextString(m) }
func (*SaveTestCaseResp) ProtoMessage()    {}
func (*SaveTestCaseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_700cdb249eee9820, []int{1}
}

func (m *SaveTestCaseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveTestCaseResp.Unmarshal(m, b)
}
func (m *SaveTestCaseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveTestCaseResp.Marshal(b, m, deterministic)
}
func (m *SaveTestCaseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveTestCaseResp.Merge(m, src)
}
func (m *SaveTestCaseResp) XXX_Size() int {
	return xxx_messageInfo_SaveTestCaseResp.Size(m)
}
func (m *SaveTestCaseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveTestCaseResp.DiscardUnknown(m)
}

var xxx_messageInfo_SaveTestCaseResp proto.InternalMessageInfo

func (m *SaveTestCaseResp) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*SaveTestCaseReq)(nil), "otddserver.SaveTestCaseReq")
	proto.RegisterType((*SaveTestCaseResp)(nil), "otddserver.SaveTestCaseResp")
}

func init() { proto.RegisterFile("otddserver.proto", fileDescriptor_700cdb249eee9820) }

var fileDescriptor_700cdb249eee9820 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0x2f, 0x49, 0x49,
	0x29, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88,
	0x28, 0xe9, 0x72, 0xf1, 0x07, 0x27, 0x96, 0xa5, 0x86, 0xa4, 0x16, 0x97, 0x38, 0x27, 0x16, 0xa7,
	0x06, 0xa5, 0x16, 0x0a, 0x49, 0x71, 0x71, 0x94, 0x40, 0xb9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x70, 0xbe, 0x92, 0x16, 0x97, 0x00, 0xaa, 0xf2, 0xe2, 0x02, 0x21, 0x31, 0x2e, 0xb6, 0xa2,
	0xd4, 0xe2, 0xd2, 0x9c, 0x12, 0xb0, 0x6a, 0x8e, 0x20, 0x28, 0xcf, 0x28, 0x81, 0x4b, 0xd0, 0xbf,
	0x24, 0x25, 0x25, 0x18, 0x6c, 0x11, 0x88, 0xcc, 0x4c, 0x4e, 0x15, 0xf2, 0xe6, 0xe2, 0x41, 0x36,
	0x40, 0x48, 0x5a, 0x0f, 0xc9, 0x79, 0x68, 0x2e, 0x91, 0x92, 0xc1, 0x2d, 0x59, 0x5c, 0xa0, 0xc4,
	0xe0, 0xa4, 0xce, 0x25, 0x94, 0x99, 0x0f, 0x56, 0x83, 0xa4, 0xd0, 0x89, 0x1f, 0x61, 0x6b, 0x00,
	0xc8, 0xbf, 0x01, 0x8c, 0x49, 0x6c, 0x60, 0x8f, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa9,
	0x1a, 0x70, 0x02, 0x0c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OtddServerServiceClient is the client API for OtddServerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OtddServerServiceClient interface {
	SaveTestCase(ctx context.Context, in *SaveTestCaseReq, opts ...grpc.CallOption) (*SaveTestCaseResp, error)
}

type otddServerServiceClient struct {
	cc *grpc.ClientConn
}

func NewOtddServerServiceClient(cc *grpc.ClientConn) OtddServerServiceClient {
	return &otddServerServiceClient{cc}
}

func (c *otddServerServiceClient) SaveTestCase(ctx context.Context, in *SaveTestCaseReq, opts ...grpc.CallOption) (*SaveTestCaseResp, error) {
	out := new(SaveTestCaseResp)
	err := c.cc.Invoke(ctx, "/otddserver.OtddServerService/SaveTestCase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OtddServerServiceServer is the server API for OtddServerService service.
type OtddServerServiceServer interface {
	SaveTestCase(context.Context, *SaveTestCaseReq) (*SaveTestCaseResp, error)
}

// UnimplementedOtddServerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOtddServerServiceServer struct {
}

func (*UnimplementedOtddServerServiceServer) SaveTestCase(ctx context.Context, req *SaveTestCaseReq) (*SaveTestCaseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveTestCase not implemented")
}

func RegisterOtddServerServiceServer(s *grpc.Server, srv OtddServerServiceServer) {
	s.RegisterService(&_OtddServerService_serviceDesc, srv)
}

func _OtddServerService_SaveTestCase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveTestCaseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OtddServerServiceServer).SaveTestCase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/otddserver.OtddServerService/SaveTestCase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OtddServerServiceServer).SaveTestCase(ctx, req.(*SaveTestCaseReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _OtddServerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "otddserver.OtddServerService",
	HandlerType: (*OtddServerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveTestCase",
			Handler:    _OtddServerService_SaveTestCase_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "otddserver.proto",
}
